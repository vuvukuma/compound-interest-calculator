{"version":3,"sources":["icons/dropdown.svg","constants/Colors.ts","constants/Shadows.ts","constants/Media.ts","components/inputs/Select.tsx","components/inputs/TextInput.tsx","components/LanguageSelector.tsx","icons/mobile-hamburger.svg","components/layout/Header.tsx","components/calculator/Calculator.styled.tsx","components/calculator/CalculatorHeader.tsx","components/layout/Panel.tsx","components/calculator/CurrencySelector.tsx","components/calculator/CalculatorForm.tsx","components/calculator/CalculatorResult.tsx","components/calculator/Calculator.tsx","locales/index.ts","App.tsx","index.tsx"],"names":["module","exports","Colors","Shadows","panel","ScreenSize","mobile","tablet","desktop","Media","Object","keys","reduce","acc","key","style","Select","styled","select","Dropdown","grey","BaseInput","input","TextInput","props","type","name","pattern","value","onChange","children","languageMessages","defineMessages","ko","id","defaultMessage","en","SelectContainer","div","LanguageSelector","intl","useIntl","LanguageOptions","label","formatMessage","lang","handleChangeLanguage","map","option","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","fillRule","d","_ref","svgRef","title","width","height","viewBox","ref","ForwardRef","forwardRef","HeaderContainer","primary","HambergerButton","button","white","Header","StyledCalculatorContainer","StyledCalculator","StyledCalculatorRow","StyledCalculatorRowLabel","StyledCalculatorResult","StyledCalculatorResultTotal","StyledCalculatorResultTotalLabel","StyledCalculatorResultTotalValue","StyledCalculatorResultRow","CalculatorHeaderContainer","CalculatorHeaderTitle","CalculatorHeaderDescription","p","secondary","CalculatorHeader","StyledPannel","Panel","StyledCurrencySelectorContainer","StyledChildrenContainer","CurrencyOptions","CurrencySelector","currency","handleChangeCurrency","idx","CalculatorForm","htmlFor","principal","handlePrincipalChange","annualInterestRate","handleAnnualInterestRateChange","frequency","handleFrequencyChange","frequencyOptions","period","handlePeriodChange","CalculatorResult","compoundTotal","totalInterest","frequencyOptionsLabelMessages","annual","semiannual","quarterly","monthly","Calculator","useState","setPrincipal","setAnnualInterestRate","setFrequency","setPeriod","setCurrency","useCallback","event","toString","parse","inputValue","Number","parseInt","getCompoundTotal","cycle","Math","pow","round","num","EPSILON","safeSearchTypeValue","currentTarget","Messages","require","defaultMessages","Container","background","App","React","navigator","language","slice","setLang","locale","messages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e204a592.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dropdown.a59b3d70.svg\";","export const Colors = {\n    'primary': '#2e3958',\n    'secondary': '#616e92',\n    'grey': '#c4cdd5',\n    'white': 'white',\n    'background': '#F7F9FC;',\n}\n\nexport default Colors;","export const Shadows = {\n    panel: '0 1px 3px 0 rgba(63, 63, 68, 0.15), 0 0 0 1px rgba(63, 63, 68, 0.05)',\n}\n\nexport default Shadows;","import { css } from 'styled-components';\n\ninterface ScreenSize {\n    [key: string]: string;\n}\n\nexport const ScreenSize: ScreenSize = {\n    mobile: '360px',\n    tablet: '768px',\n    desktop: '1440px',\n}\n\nexport const Media = Object\n    .keys(ScreenSize)\n    .reduce((acc: any, key: string) => {\n        acc[key] = (style: any) => `\n            @media (min-width: ${ScreenSize[key]}) {\n                ${style};\n            }\n        `\n        return acc\n    }, {})\n\n  \nexport default Media;","import { Colors } from '../../constants';\nimport styled from 'styled-components';\nimport Dropdown from 'icons/dropdown.svg';\n\nexport const Select = styled.select`\n    -moz-appearance:none;\n    -webkit-appearance:none;\n    border-radius: 3px;\n    height: 34px;\n    font-size: 14px;\n    padding-left: 10px;\n    padding-right: 20px;\n    appearance:none;\n    background: transparent;\n    background-repeat: no-repeat;\n    background-image: url(${Dropdown}), linear-gradient(to bottom, #ffffff, #f9fafb);;\n    background-position-x: calc(100% - 2px), 0;\n    background-position-y: 7px, 0;\n    border: solid 1px ${Colors.grey};\n    border-radius: 2px 0 0 2px;\n`;","import React from 'react';\nimport { Colors } from '../../constants';\nimport styled from 'styled-components';\n\nconst BaseInput = styled.input`\n    width: 100%;\n    height: 34px;\n    font-size: 14px;\n    border: solid 1px ${Colors.grey};\n    border-radius: 2px 0 0 2px;\n    padding: 0 10px;\n`;\n\ninterface TextInputProps {\n    name: string,\n    value: string,\n    onChange?: (value: any) => void\n    children?: React.ReactChildren,\n    pattern?: string,\n}\n\nexport const TextInput = (props: TextInputProps) => {\n    return (\n        <BaseInput type=\"text\"\n            name={props.name}\n            pattern={props.pattern}\n            value={props.value}\n            onChange={props.onChange}>\n                {props.children}\n        </BaseInput>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Select } from './inputs';\nimport { useIntl, defineMessages } from 'react-intl';\n\nconst languageMessages = defineMessages({\n    ko: {\n        id: 'language.ko',\n        defaultMessage: '한국어',\n    },\n    en: {\n        id: 'language.en',\n        defaultMessage: '영어',\n    },\n});\n\nconst SelectContainer = styled.div`\n    margin: auto 0 auto 16px;\n`\n\ninterface LanguageSelectorProps {\n    lang: string | undefined;\n    handleChangeLanguage: (event: React.ChangeEvent<HTMLSelectElement>) => void | undefined;\n}\n\nconst LanguageSelector = (props: LanguageSelectorProps) => {\n    const intl = useIntl();\n    const LanguageOptions = [\n        { label: intl.formatMessage(languageMessages.en), value: 'en' },\n        { label: intl.formatMessage(languageMessages.ko), value: 'ko' },\n    ]\n\n    return (\n        <SelectContainer>\n            <Select\n                name=\"language\"\n                value={props.lang}\n                onChange={props.handleChangeLanguage}>\n                {LanguageOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>)}\n            </Select>\n        </SelectContainer>\n    )\n}\n\nexport default LanguageSelector;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  fillRule: \"evenodd\",\n  d: \"M19 11H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1zm0-7H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1zm0 14H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1z\"\n});\n\nvar SvgMobileHamburger = function SvgMobileHamburger(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMobileHamburger, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mobile-hamburger.d1d9f9d9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport LanguageSelector from '../LanguageSelector';\nimport { Colors } from '../../constants';\nimport { ReactComponent as HambergerIcon } from 'icons/mobile-hamburger.svg';\n\nconst HeaderContainer = styled.div`\n    height: 56px;\n    padding: 0 10px;\n    background-color: ${Colors.primary};\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst HambergerButton = styled.button`\n    margin: auto 0;\n    width: 36px;\n    height: 36px;\n    color: ${Colors.white};\n    border: none;\n    background-color: transparent;\n`;\n\ninterface HeaderProps {\n    lang: string | undefined;\n    handleChangeLanguage: (event: React.ChangeEvent<HTMLSelectElement>) => void | undefined;\n}\n\nconst Header = (props: HeaderProps) => {\n    return (\n        <HeaderContainer>\n            <HambergerButton>\n                <HambergerIcon/>\n            </HambergerButton>\n            <LanguageSelector\n                lang={props.lang}\n                handleChangeLanguage={props.handleChangeLanguage} />\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","import styled from 'styled-components';\nimport { Media } from '../../constants';\n\nexport const StyledCalculatorContainer = styled.div`\n    margin: 0 auto;\n    padding: 12px;\n    max-width: 728px;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nexport const StyledCalculator = styled.div`\n    margin: 0 auto;\n\n    ${Media.tablet`\n        margin: 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    `}\n`;\nexport const StyledCalculatorRow = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    padding-bottom: 24px;\n`;\nexport const StyledCalculatorRowLabel = styled.label`\n    padding-bottom: 4px;\n`;\nexport const StyledCalculatorResult = styled(StyledCalculatorContainer)`\n    margin: 8px 20px;\n`;\nexport const StyledCalculatorResultTotal = styled.div`\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    padding-bottom : 8px;\n    text-align: left;\n    font-size: 16px;\n`;\nexport const StyledCalculatorResultTotalLabel = styled.div`\n    font-size: 16px;\n    margin-bottom: 12px;\n`;\nexport const StyledCalculatorResultTotalValue = styled.div`\n    font-size: 28px;\n    line-height: 1.14;\n    margin-bottom: 19px;\n`;\nexport const StyledCalculatorResultRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding-bottom : 8px;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport { Colors } from '../../constants';\n\nconst CalculatorHeaderContainer = styled.div`\n    margin: 0 10px;\n    text-align: left;\n`;\nconst CalculatorHeaderTitle = styled.div`\n    height: 28px;\n    margin-top: 4px;\n    display: block;\n    font-size: 21px;\n    font-weight: 600;\n    line-height: initial;\n`;\nconst CalculatorHeaderDescription = styled.p`\n    margin-top: 8px;\n    padding-bottom: 16px;\n    color: ${Colors.secondary};\n`;\n\nconst CalculatorHeader = () => (\n    <CalculatorHeaderContainer>\n        <CalculatorHeaderTitle>\n            <FormattedMessage defaultMessage=\"복리 계산기 📈\" id=\"calculator.header.title\"></FormattedMessage>\n        </CalculatorHeaderTitle>\n        <CalculatorHeaderDescription>\n            <FormattedMessage defaultMessage=\"이 계산기를 사용해서, 복리의 마법을 확인해 보세요! 🔮\" id=\"calculator.header.desc\"></FormattedMessage>\n        </CalculatorHeaderDescription>\n    </CalculatorHeaderContainer>\n)\n\nexport default CalculatorHeader\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { Colors, Shadows } from '../../constants';\n\nconst StyledPannel = styled.div`\n    width: 344px;\n    padding: 16px;\n    margin-bottom: 16px;\n    border-radius: 4px;\n    box-shadow: ${Shadows.panel};\n    background-color: ${Colors.white};\n    height: 100%;\n`;\n\ninterface Props {\n    children: ReactNode\n}\n\nconst Panel = ({ children }: Props) => {\n    return(\n        <StyledPannel>\n            { children }\n        </StyledPannel>\n    )\n}\n\nexport default Panel;","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { Select } from '../inputs';\n\nconst StyledCurrencySelectorContainer = styled.div`\n    display: flex;\n`;\n\nconst StyledChildrenContainer = styled.div`\n    flex: auto;\n`;\n\nconst CurrencyOptions = [\n    { label: '$', value: 'USD' },\n    { label: '₩', value: 'KRW' },\n    { label: '€', value: 'EUR' },\n]\n\ninterface CurrencySelectorProps {\n    currency: string | undefined;\n    handleChangeCurrency: ((selected: any) => void) | undefined;\n    children: ReactNode;\n}\n\nconst CurrencySelector = (props: CurrencySelectorProps) => {\n    return (\n        <StyledCurrencySelectorContainer>\n            <Select\n                name=\"currency\"\n                value={props.currency}\n                onChange={props.handleChangeCurrency}>\n                {\n                    CurrencyOptions.map((option, idx) => {\n                        return <option key={idx} value={option.value}>{option.label}</option>\n                    })\n                }\n            </Select>\n            <StyledChildrenContainer>\n                { props.children }\n            </StyledChildrenContainer>\n        </StyledCurrencySelectorContainer>\n    )\n}\n\nexport default CurrencySelector;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Panel from 'components/layout/Panel';\nimport CurrencySelector from './CurrencySelector';\nimport { Select, TextInput } from '../inputs';\nimport {\n    StyledCalculatorRow,\n    StyledCalculatorRowLabel,\n} from './Calculator.styled';\n\ninterface CalculatorFormProps {\n    currency: string;\n    principal: string;\n    annualInterestRate: string;\n    frequency: string;\n    frequencyOptions: Array<{label: any, value: string}>;\n    period: string;\n    handleChangeCurrency: (value: any) => void;\n    handlePrincipalChange: (value: any) => void;\n    handleAnnualInterestRateChange: (value: any) => void;\n    handleFrequencyChange: (value: any) => void;\n    handlePeriodChange: (value: any) => void;\n}\n\nexport const CalculatorForm = (props: CalculatorFormProps) => {\n    return (\n        <Panel>\n            <StyledCalculatorRow>\n                <StyledCalculatorRowLabel htmlFor=\"principal\">\n                    <FormattedMessage defaultMessage=\"투자 원금\" id=\"calculator.input.label.principal\"></FormattedMessage>\n                </StyledCalculatorRowLabel>\n                <CurrencySelector\n                    currency={props.currency}\n                    handleChangeCurrency={props.handleChangeCurrency}>\n                    <TextInput\n                        name=\"principal\"\n                        pattern=\"[0-9]*\"\n                        value={props.principal}\n                        onChange={props.handlePrincipalChange} />\n                </CurrencySelector>\n            </StyledCalculatorRow>\n            <StyledCalculatorRow>\n                <StyledCalculatorRowLabel htmlFor=\"annualInterestRate\">\n                    <FormattedMessage defaultMessage=\"연 이자율(%)\" id=\"calculator.input.label.annualInterestRate\"></FormattedMessage>\n                </StyledCalculatorRowLabel>\n                <TextInput \n                    name=\"annualInterestRate\"\n                    value={props.annualInterestRate}\n                    onChange={props.handleAnnualInterestRateChange} />\n            </StyledCalculatorRow>\n            <StyledCalculatorRow>\n                <StyledCalculatorRowLabel htmlFor=\"frequency\">\n                    <FormattedMessage defaultMessage=\"복리계산빈도\" id=\"calculator.input.label.frequency\"></FormattedMessage>\n                </StyledCalculatorRowLabel>\n                <Select\n                    name=\"frequency\"\n                    value={props.frequency}\n                    onChange={props.handleFrequencyChange}>\n                    {props.frequencyOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>)}\n                </Select>\n            </StyledCalculatorRow>\n            <StyledCalculatorRow>\n                <StyledCalculatorRowLabel htmlFor=\"period\">\n                    <FormattedMessage defaultMessage=\"기간 (년)\" id=\"calculator.input.label.period\"></FormattedMessage>\n                </StyledCalculatorRowLabel>\n                <TextInput\n                    name=\"period\"\n                    pattern=\"[0-9]*\"\n                    value={props.period}\n                    onChange={props.handlePeriodChange} />\n            </StyledCalculatorRow>\n        </Panel>\n    )\n}\n\nexport default CalculatorForm;","import React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\nimport Panel from 'components/layout/Panel';\nimport {\n    StyledCalculatorResult,\n    StyledCalculatorResultRow,\n    StyledCalculatorResultTotal,\n    StyledCalculatorResultTotalLabel,\n    StyledCalculatorResultTotalValue,\n} from './Calculator.styled';\n\ninterface CalculatorResultProps {\n    currency: string;\n    compoundTotal: number;\n    principal: number;\n    totalInterest: number;\n}\n\nexport const CalculatorResult = (props: CalculatorResultProps) => {\n    return (\n        <Panel>\n            <StyledCalculatorResult>\n                <StyledCalculatorResultTotal>\n                    <StyledCalculatorResultTotalLabel>\n                        <FormattedMessage defaultMessage=\"총 금액\" \n                            id=\"calculator.result.label.compoundTotal\"></FormattedMessage>\n                    </StyledCalculatorResultTotalLabel>\n                    <StyledCalculatorResultTotalValue>\n                        <FormattedNumber value={props.compoundTotal} \n                            style=\"currency\" currency={props.currency}></FormattedNumber>\n                    </StyledCalculatorResultTotalValue>\n                </StyledCalculatorResultTotal>\n                <StyledCalculatorResultRow>\n                    <div>\n                        <FormattedMessage defaultMessage=\"원금\" \n                            id=\"calculator.result.label.principal\"></FormattedMessage>\n                    </div>\n                    <div>\n                        <FormattedNumber value={props.principal} \n                            style=\"currency\" currency={props.currency}></FormattedNumber>\n                    </div>                    \n                </StyledCalculatorResultRow>\n                <StyledCalculatorResultRow>\n                    <div>\n                        <FormattedMessage defaultMessage=\"이자\" \n                            id=\"calculator.result.label.totalInterest\"></FormattedMessage>\n                    </div>\n                    <div>\n                        <FormattedNumber value={props.totalInterest} \n                            style=\"currency\" currency={props.currency}></FormattedNumber>\n                    </div>\n                </StyledCalculatorResultRow>\n            </StyledCalculatorResult>\n        </Panel>\n    )\n}\n\nexport default CalculatorResult;","import React, { useState, useCallback } from 'react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { StyledCalculator, StyledCalculatorContainer } from './Calculator.styled';\nimport CalculatorHeader from './CalculatorHeader';\nimport CalculatorForm from './CalculatorForm';\nimport CalculatorResult from './CalculatorResult';\n\nconst frequencyOptionsLabelMessages = defineMessages({\n    annual: {\n        id: 'calculator.input.frequency.annual',\n        defaultMessage: '연 복리',\n    },\n    semiannual: {\n        id: 'calculator.input.frequency.semiannual',\n        defaultMessage: '6개월 반기복리',\n    },\n    quarterly: {\n        id: 'calculator.input.frequency.quarterly',\n        defaultMessage: '3개월 분기복리',\n    },\n    monthly: {\n        id: 'calculator.input.frequency.monthly',\n        defaultMessage: '월 복리',\n    },\n});\n\nconst Calculator = () => {\n    const [principal, setPrincipal] = useState('1000000');\n    const [annualInterestRate, setAnnualInterestRate] = useState('2');\n    const [frequency, setFrequency] = useState('12');\n    const [period, setPeriod] = useState('12');\n    const [currency, setCurrency] = useState('USD');\n    const intl = useIntl();\n\n    const handlePrincipalChange = useCallback((event) => setPrincipal(event.target.value.toString()), []);\n    const handleAnnualInterestRateChange = useCallback((event) => setAnnualInterestRate(event.target.value.toString()), []);\n    const handleFrequencyChange = useCallback((event) => setFrequency(event.target.value.toString()), []);\n    const handlePeriodChange = useCallback((event) => setPeriod(event.target.value.toString()), []);\n\n    const frequencyOptions = [\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.annual), value: '12' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.semiannual), value: '6' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.quarterly), value: '3' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.monthly), value: '1' },\n    ]\n\n    function parse(inputValue: string): number {\n        if (inputValue === '') return 0;\n\n        return Number.parseInt(inputValue, 10);\n    }\n\n    function getCompoundTotal() {\n        const cycle: number = 12 / parse(frequency);\n\n        return parse(principal) * Math.pow((1 + parse(annualInterestRate) / 100 / cycle), (parse(period) * cycle));\n    }\n\n    function getTotalInterest() {\n        return getCompoundTotal() - parse(principal);\n    }\n\n    function round(num: number) {\n        return Math.round((num + Number.EPSILON) * 100) / 100\n    }\n\n    const handleChangeCurrency = (event: React.FormEvent<HTMLSelectElement>) => {\n        const safeSearchTypeValue: string = event.currentTarget.value;\n\n        setCurrency(safeSearchTypeValue);\n    }\n\n    return (\n        <StyledCalculatorContainer>\n            <CalculatorHeader />\n            <StyledCalculator>\n                <CalculatorForm \n                    currency={currency}\n                    principal={principal}\n                    annualInterestRate={annualInterestRate}\n                    frequency={frequency}\n                    frequencyOptions={frequencyOptions}\n                    period={period}\n                    handleChangeCurrency={handleChangeCurrency}\n                    handlePrincipalChange={handlePrincipalChange}\n                    handleAnnualInterestRateChange={handleAnnualInterestRateChange}\n                    handleFrequencyChange={handleFrequencyChange}\n                    handlePeriodChange={handlePeriodChange}/>\n                <CalculatorResult \n                    currency={currency}\n                    compoundTotal={round(getCompoundTotal())}\n                    principal={parse(principal)}\n                    totalInterest={round(getTotalInterest())}/>\n            </StyledCalculator>\n        </StyledCalculatorContainer>\n    );\n}\n\nexport default Calculator;","const Messages: { [key: string]: any } = {\n    ko: require('./ko.json'),\n    en: require('./en.json'),\n    defaultMessages: require('./defaultMessages.json')\n}\n\nexport default Messages;","import React from 'react';\nimport styled from 'styled-components';\nimport { IntlProvider } from 'react-intl';\nimport Header from 'components/layout/Header';\nimport Calculator from 'components/calculator/Calculator';\nimport Messages from 'locales';\nimport { Colors } from './constants';\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${Colors.background}\n`;\n\nfunction App() {\n  const [lang, setLang] = React.useState(navigator.language.slice(0, 2));\n  const handleChangeLanguage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLang(event.target.value);\n  }\n\n  return (\n    <Container>\n      <IntlProvider \n        locale={lang}\n        messages={Messages[lang]}>\n        <Header\n            lang={lang}\n            handleChangeLanguage={handleChangeLanguage} />\n        \n          <Calculator />\n      </IntlProvider>\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}