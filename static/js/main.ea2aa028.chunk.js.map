{"version":3,"sources":["icons/dropdown.svg","components/LanguageSelector.tsx","constants/Colors.ts","icons/mobile-hamburger.svg","components/layout/Header.tsx","components/calculator/CalculatorHeader.tsx","components/calculator/CurrencySelector.tsx","constants/Shadows.ts","components/layout/Panel.tsx","components/calculator/Calculator.tsx","locales/index.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","languageMessages","defineMessages","ko","id","defaultMessage","en","SelectContainer","styled","div","LanguageSelector","props","intl","useIntl","LanguageOptions","label","formatMessage","value","name","options","lang","onChange","handleChangeLanguage","Colors","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","fillRule","d","_ref","svgRef","title","width","height","viewBox","ref","ForwardRef","forwardRef","HeaderContainer","primary","HambergerButton","button","white","Header","CalculatorHeaderContainer","CalculatorHeaderTitle","CalculatorHeaderDescription","p","secondary","CalculatorHeader","StyledCurrencySelectorContainer","StyledSelector","select","Dropdown","grey","StyledChildrenContainer","CurrencyOptions","CurrencySelector","currency","handleChangeCurrency","map","option","idx","children","Shadows","panel","StyledPannel","Panel","CalculatorContainer","CalculatorRow","CalculatorRowLabel","CalculatorResult","CalculatorResultTotal","CalculatorResultTotalLabel","CalculatorResultTotalValue","CalculatorResultRow","frequencyOptionsLabelMessages","annual","semiannual","quarterly","monthly","Calculator","useState","principal","setPrincipal","annualInterestRate","setAnnualInterestRate","frequency","setFrequency","period","setPeriod","setCurrency","handlePrincipalChange","useCallback","handleAnnualInterestRateChange","handleFrequencyChange","handlePeriodChange","FrequencyOptions","parse","inputValue","Number","parseInt","getCompoundTotal","cycle","Math","pow","round","num","EPSILON","htmlFor","event","safeSearchTypeValue","currentTarget","pattern","type","style","Messages","require","defaultMessages","Container","App","React","navigator","language","slice","setLang","locale","messages","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","i18n","enTranslations","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea2aa028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dropdown.a59b3d70.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Select } from '@shopify/polaris';\nimport { useIntl, defineMessages } from 'react-intl';\n\nconst languageMessages = defineMessages({\n    ko: {\n        id: 'language.ko',\n        defaultMessage: '한국어',\n    },\n    en: {\n        id: 'language.en',\n        defaultMessage: '영어',\n    },\n});\n\nconst SelectContainer = styled.div`\n    margin: auto 0 auto 16px;\n`\n\ninterface LanguageSelectorProps {\n    lang: string | undefined;\n    handleChangeLanguage: ((selected: string) => void) | undefined;\n}\n\nconst LanguageSelector = (props: LanguageSelectorProps) => {\n    const intl = useIntl();\n    const LanguageOptions = [\n        { label: intl.formatMessage(languageMessages.en), value: 'en' },\n        { label: intl.formatMessage(languageMessages.ko), value: 'ko' },\n    ]\n\n    return (\n        <SelectContainer>\n            <Select\n                label=''\n                name=\"language\"\n                options={LanguageOptions}\n                value={props.lang}\n                onChange={props.handleChangeLanguage} />\n        </SelectContainer>\n    )\n}\n\nexport default LanguageSelector;","const Colors = {\n    'primary': '#2e3958',\n    'secondary': '#616e92',\n    'grey': '#c4cdd5',\n    'white': 'white',\n}\n\nexport default Colors;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  fillRule: \"evenodd\",\n  d: \"M19 11H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1zm0-7H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1zm0 14H1c-.552 0-1-.447-1-1 0-.553.448-1 1-1h18c.552 0 1 .447 1 1 0 .553-.448 1-1 1z\"\n});\n\nvar SvgMobileHamburger = function SvgMobileHamburger(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMobileHamburger, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mobile-hamburger.d1d9f9d9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport LanguageSelector from '../LanguageSelector';\nimport Colors from '../../constants/Colors';\nimport { ReactComponent as HambergerIcon } from 'icons/mobile-hamburger.svg';\n\nconst HeaderContainer = styled.div`\n    height: 56px;\n    padding: 0 10px;\n    background-color: ${Colors.primary};\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst HambergerButton = styled.button`\n    margin: auto 0;\n    width: 36px;\n    height: 36px;\n    color: ${Colors.white};\n    border: none;\n    background-color: transparent;\n`;\n\ninterface HeaderProps {\n    lang: string | undefined;\n    handleChangeLanguage: ((selected: string) => void) | undefined;\n}\n\nconst Header = (props: HeaderProps) => {\n    return (\n        <HeaderContainer>\n            <HambergerButton>\n                <HambergerIcon/>\n            </HambergerButton>\n            <LanguageSelector\n                lang={props.lang}\n                handleChangeLanguage={props.handleChangeLanguage} />\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport Colors from '../../constants/Colors';\n\nconst CalculatorHeaderContainer = styled.div`\n    text-align: left;\n`;\nconst CalculatorHeaderTitle = styled.div`\n    height: 28px;\n    margin-top: 4px;\n    display: block;\n    font-size: 21px;\n    font-weight: 600;\n    line-height: initial;\n`;\nconst CalculatorHeaderDescription = styled.p`\n    margin-top: 8px;\n    padding-bottom: 16px;\n    color: ${Colors.secondary};\n`;\n\nconst CalculatorHeader = () => (\n    <CalculatorHeaderContainer>\n        <CalculatorHeaderTitle>\n            <FormattedMessage defaultMessage=\"복리 계산기 📈\" id=\"calculator.header.title\"></FormattedMessage>\n        </CalculatorHeaderTitle>\n        <CalculatorHeaderDescription>\n            <FormattedMessage defaultMessage=\"이 계산기를 사용해서, 복리의 마법을 확인해 보세요! 🔮\" id=\"calculator.header.desc\"></FormattedMessage>\n        </CalculatorHeaderDescription>\n    </CalculatorHeaderContainer>\n)\n\nexport default CalculatorHeader\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport Colors from 'constants/Colors';\nimport Dropdown from 'icons/dropdown.svg';\n\nconst StyledCurrencySelectorContainer = styled.div`\n    display: flex;\n`;\n\nconst StyledSelector = styled.select`\n    -moz-appearance:none;\n    -webkit-appearance:none;\n    width: 60px;\n    font-size: 14px;\n    padding-left: 16px;\n    appearance:none;\n    background: transparent;\n    background-repeat: no-repeat;\n    background-image: url(${Dropdown}), linear-gradient(to bottom, #ffffff, #f9fafb);;\n    background-position-x: calc(100% - 8px), 0;\n    background-position-y: 7px, 0;\n    border: solid 1px ${Colors.grey};\n    border-radius: 2px 0 0 2px;\n`;\n\nconst StyledChildrenContainer = styled.div`\n    flex: auto;\n`;\n\nconst CurrencyOptions = [\n    { label: '$', value: 'USD' },\n    { label: '₩', value: 'KRW' },\n    { label: '€', value: 'EUR' },\n]\n\ninterface CurrencySelectorProps {\n    currency: string | undefined;\n    handleChangeCurrency: ((selected: any) => void) | undefined;\n    children: ReactNode;\n}\n\nconst CurrencySelector = (props: CurrencySelectorProps) => {\n    return (\n        <StyledCurrencySelectorContainer>\n            <StyledSelector\n                name=\"currency\"\n                value={props.currency}\n                onChange={props.handleChangeCurrency}>\n                {\n                    CurrencyOptions.map((option, idx) => {\n                        return <option key={idx} value={option.value}>{option.label}</option>\n                    })\n                }\n            </StyledSelector>\n            <StyledChildrenContainer>\n                { props.children }\n            </StyledChildrenContainer>\n        </StyledCurrencySelectorContainer>\n    )\n}\n\nexport default CurrencySelector;","const Shadows = {\n    panel: '0 1px 3px 0 rgba(63, 63, 68, 0.15), 0 0 0 1px rgba(63, 63, 68, 0.05)',\n}\n\nexport default Shadows;","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport Colors from 'constants/Colors';\nimport Shadows from 'constants/Shadows';\n\nconst StyledPannel = styled.div`\n    width: 100%;\n    padding: 16px;\n    margin-bottom: 16px;\n    border-radius: 4px;\n    box-shadow: ${Shadows.panel};\n    background-color: ${Colors.white};\n`;\n\ninterface Props {\n    children: ReactNode\n}\n\nconst Panel = ({ children }: Props) => {\n    return(\n        <StyledPannel>\n            { children }\n        </StyledPannel>\n    )\n}\n\nexport default Panel;","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport CalculatorHeader from './CalculatorHeader';\nimport CurrencySelector from './CurrencySelector';\nimport Panel from 'components/layout/Panel';\nimport { TextField, Select } from '@shopify/polaris';\nimport { useIntl, defineMessages, FormattedMessage, FormattedNumber } from 'react-intl';\n\nconst CalculatorContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nconst CalculatorRow = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    padding-bottom: 24px;\n`;\nconst CalculatorRowLabel = styled.label`\n    padding-bottom: 4px;\n`;\nconst CalculatorResult = styled(CalculatorContainer)`\n    margin: 8px 40px;\n`;\nconst CalculatorResultTotal = styled.div`\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n    padding-bottom : 8px;\n    text-align: left;\n    font-size: 16px;\n`;\nconst CalculatorResultTotalLabel = styled.div`\n    font-size: 16px;\n    margin-bottom: 12px;\n`;\nconst CalculatorResultTotalValue = styled.div`\n    font-size: 28px;\n    line-height: 1.14;\n    margin-bottom: 19px;\n`;\nconst CalculatorResultRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding-bottom : 8px;\n`;\n\nconst frequencyOptionsLabelMessages = defineMessages({\n    annual: {\n        id: 'calculator.input.frequency.annual',\n        defaultMessage: '연 복리',\n    },\n    semiannual: {\n        id: 'calculator.input.frequency.semiannual',\n        defaultMessage: '6개월 반기복리',\n    },\n    quarterly: {\n        id: 'calculator.input.frequency.quarterly',\n        defaultMessage: '3개월 분기복리',\n    },\n    monthly: {\n        id: 'calculator.input.frequency.monthly',\n        defaultMessage: '월 복리',\n    },\n});\n\nconst Calculator = () => {\n    const [principal, setPrincipal] = useState('1000000');\n    const [annualInterestRate, setAnnualInterestRate] = useState('2');\n    const [frequency, setFrequency] = useState('12');\n    const [period, setPeriod] = useState('12');\n    const [currency, setCurrency] = useState('USD');\n    const intl = useIntl();\n\n    const handlePrincipalChange = useCallback((value) => setPrincipal(value), []);\n    const handleAnnualInterestRateChange = useCallback((value) => setAnnualInterestRate(value), []);\n    const handleFrequencyChange = useCallback((value) => setFrequency(value), []);\n    const handlePeriodChange = useCallback((value) => setPeriod(value), []);\n\n    const FrequencyOptions = [\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.annual), value: '12' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.semiannual), value: '6' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.quarterly), value: '3' },\n        { label: intl.formatMessage(frequencyOptionsLabelMessages.monthly), value: '1' },\n    ]\n\n    function parse(inputValue: string): number {\n        return Number.parseInt(inputValue, 10);\n    }\n\n    function getCompoundTotal() {\n        const cycle: number = 12 / parse(frequency);\n\n        return parse(principal) * Math.pow((1 + parse(annualInterestRate) / 100 / cycle), (parse(period) * cycle));\n    }\n\n    function getTotalInterest() {\n        return getCompoundTotal() - parse(principal);\n    }\n\n    function round(num: number) {\n        return Math.round((num + Number.EPSILON) * 100) / 100\n    }\n\n    const handleChangeCurrency = (event: React.FormEvent<HTMLSelectElement>) => {\n        const safeSearchTypeValue: string = event.currentTarget.value;\n\n        setCurrency(safeSearchTypeValue);\n    }\n\n    return (\n        <CalculatorContainer>\n            <CalculatorHeader />\n            <Panel>\n                <CalculatorRow>\n                    <CalculatorRowLabel htmlFor=\"principal\">\n                        <FormattedMessage defaultMessage=\"투자 원금\" id=\"calculator.input.label.principal\"></FormattedMessage>\n                    </CalculatorRowLabel>\n                    <CurrencySelector\n                        currency={currency}\n                        handleChangeCurrency={handleChangeCurrency}>\n                        <TextField\n                            label=''\n                            name=\"principal\"\n                            pattern=\"[0-9]*\"\n                            type=\"number\"\n                            value={principal}\n                            onChange={handlePrincipalChange} />\n                    </CurrencySelector>\n                </CalculatorRow>\n                <CalculatorRow>\n                    <CalculatorRowLabel htmlFor=\"annualInterestRate\">\n                        <FormattedMessage defaultMessage=\"연 이자율(%)\" id=\"calculator.input.label.annualInterestRate\"></FormattedMessage>\n                    </CalculatorRowLabel>\n                    <TextField\n                        label=''\n                        name=\"annualInterestRate\"\n                        type=\"number\"\n                        value={annualInterestRate}\n                        onChange={handleAnnualInterestRateChange} />\n                </CalculatorRow>\n                <CalculatorRow>\n                    <CalculatorRowLabel htmlFor=\"frequency\">\n                        <FormattedMessage defaultMessage=\"복리계산빈도\" id=\"calculator.input.label.frequency\"></FormattedMessage>\n                    </CalculatorRowLabel>\n                    <Select\n                        label=''\n                        name=\"frequency\"\n                        options={FrequencyOptions}\n                        value={frequency}\n                        onChange={handleFrequencyChange} />\n                </CalculatorRow>\n                <CalculatorRow>\n                    <CalculatorRowLabel htmlFor=\"period\">\n                        <FormattedMessage defaultMessage=\"기간 (년)\" id=\"calculator.input.label.period\"></FormattedMessage>\n                    </CalculatorRowLabel>\n                    <TextField\n                        label=''\n                        name=\"period\"\n                        type=\"number\"\n                        pattern=\"[0-9]*\"\n                        value={period}\n                        onChange={handlePeriodChange} />\n                </CalculatorRow>\n            </Panel>\n            <Panel>\n                <CalculatorResult>\n                    <CalculatorResultTotal>\n                        <CalculatorResultTotalLabel>\n                            <FormattedMessage defaultMessage=\"총 금액\" \n                                id=\"calculator.result.label.compoundTotal\"></FormattedMessage>\n                        </CalculatorResultTotalLabel>\n                        <CalculatorResultTotalValue>\n                            <FormattedNumber value={round(getCompoundTotal())} \n                                style=\"currency\" currency={currency}></FormattedNumber>\n                        </CalculatorResultTotalValue>\n                    </CalculatorResultTotal>\n                    <CalculatorResultRow>\n                        <div>\n                            <FormattedMessage defaultMessage=\"원금\" \n                                id=\"calculator.result.label.principal\"></FormattedMessage>\n                        </div>\n                        <div>\n                            <FormattedNumber value={parse(principal)} \n                                style=\"currency\" currency={currency}></FormattedNumber>\n                        </div>                    \n                    </CalculatorResultRow>\n                    <CalculatorResultRow>\n                        <div>\n                            <FormattedMessage defaultMessage=\"이자\" \n                                id=\"calculator.result.label.totalInterest\"></FormattedMessage>\n                        </div>\n                        <div>\n                            <FormattedNumber value={round(getTotalInterest())} \n                                style=\"currency\" currency={currency}></FormattedNumber>\n                        </div>\n                    </CalculatorResultRow>\n                </CalculatorResult>\n            </Panel>\n        </CalculatorContainer>\n    );\n}\n\nexport default Calculator;","const Messages: { [key: string]: any } = {\n    ko: require('./ko.json'),\n    en: require('./en.json'),\n    defaultMessages: require('./defaultMessages.json')\n}\n\nexport default Messages;","import React from 'react';\nimport styled from 'styled-components';\nimport { IntlProvider } from 'react-intl';\nimport Header from 'components/layout/Header';\nimport Calculator from 'components/calculator/Calculator';\nimport Messages from 'locales';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 12px;\n  max-width: 400px;\n  text-align: center;\n`;\n\nfunction App() {\n  const [lang, setLang] = React.useState(navigator.language.slice(0, 2));\n  const handleChangeLanguage = (lang: string) => {\n    setLang(lang);\n  }\n\n  return (\n    <IntlProvider\n      locale={lang}\n      messages={Messages[lang]}>\n      <Header \n          lang={lang}\n          handleChangeLanguage={handleChangeLanguage} />\n      <Container>\n        <Calculator />\n      </Container>\n    </IntlProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@shopify/polaris/styles.css';\nimport './index.css';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport { AppProvider } from '@shopify/polaris';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <AppProvider i18n={enTranslations}>\n        <App />\n      </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}